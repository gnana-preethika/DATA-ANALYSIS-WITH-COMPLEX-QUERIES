-- Step 0: Drop tables if they already exist
DROP TABLE IF EXISTS ratings;
DROP TABLE IF EXISTS movie_directors;
DROP TABLE IF EXISTS movies;
DROP TABLE IF EXISTS directors;

-- Step 1: Create the directors table
CREATE TABLE directors (
    director_id INT,
    director_name VARCHAR(100)
);

INSERT INTO directors VALUES
(1, 'Christopher Nolan'),
(2, 'James Cameron'),
(3, 'David Fincher'),
(4, 'Chad Stahelski');

-- Step 2: Create the movies table
CREATE TABLE movies (
    movie_id INT,
    title VARCHAR(100),
    genre VARCHAR(50)
);

INSERT INTO movies VALUES
(1, 'Inception', 'Sci-Fi'),
(2, 'The Matrix', 'Sci-Fi'),
(3, 'Interstellar', 'Sci-Fi'),
(4, 'Titanic', 'Romance'),
(5, 'Zodiac', 'Mystery'),
(6, 'John Wick', 'Action'),
(7, 'Seven', 'Thriller');

-- Step 3: Map movies to directors (many-to-one)
CREATE TABLE movie_directors (
    movie_id INT,
    director_id INT
);

INSERT INTO movie_directors VALUES
(1, 1),
(2, 1),
(3, 1),
(4, 2),
(5, 3),
(6, 4),
(7, 3);

-- Step 4: Ratings table
CREATE TABLE ratings (
    rating_id INT,
    movie_id INT,
    rating INT  -- Assume scale of 1 to 10
);

INSERT INTO ratings VALUES
(1, 1, 9), (2, 1, 10), (3, 2, 8), (4, 2, 9), (5, 3, 10),
(6, 4, 7), (7, 4, 8), (8, 5, 6), (9, 6, 9), (10, 6, 8),
(11, 7, 10), (12, 7, 9), (13, 3, 9), (14, 5, 7);

-- Step 5: CTE + Window function to find top 2 movies per genre, with director info
WITH avg_ratings AS (
    SELECT 
        m.genre,
        m.title,
        d.director_name,
        ROUND(AVG(r.rating), 2) AS avg_rating
    FROM movies m
    JOIN ratings r ON m.movie_id = r.movie_id
    JOIN movie_directors md ON m.movie_id = md.movie_id
    JOIN directors d ON md.director_id = d.director_id
    GROUP BY m.genre, m.title, d.director_name
),
ranked_movies AS (
    SELECT *,
        RANK() OVER (PARTITION BY genre ORDER BY avg_rating DESC) AS genre_rank
    FROM avg_ratings
)
SELECT genre, title, director_name, avg_rating
FROM ranked_movies
WHERE genre_rank <= 2;
